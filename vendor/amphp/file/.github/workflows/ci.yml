name: Continuous Integration

on:
  - push
  - pull_request

jobs:
  tests:
    strategy:
      matrix:
        include:
          - operating-system: 'ubuntu-latest'
            php-version: '8.1'
            extensions: uv, eio

          - operating-system: 'ubuntu-latest'
            php-version: '8.2'
            extensions: uv, eio

          - operating-system: 'ubuntu-latest'
            php-version: '8.3'
            extensions: uv
            style-fix: none
            static-analysis: none

          - operating-system: 'ubuntu-latest'
            php-version: '8.4'
            extensions: uv
            style-fix: none
            static-analysis: none

          - operating-system: 'windows-latest'
            php-version: '8.3'
            job-description: 'on Windows'
            static-analysis: none

          - operating-system: 'macos-latest'
            php-version: '8.3'
            extensions: uv
            job-description: 'on macOS'
            style-fix: none
            static-analysis: none


    name: PHP ${{ matrix.php-version }} ${{ matrix.job-description }}

    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install libuv
        run: |
          sudo apt-get update
          sudo apt-get install libuv1-dev
        if: runner.os == 'Linux'

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ matrix.extensions }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-dir)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ runner.os }}-${{ matrix.php-version }}-${{ hashFiles('**/composer.*') }}-${{ matrix.composer-flags }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 5
          retry_wait_seconds: 30
          command: |
            composer update --optimize-autoloader --no-interaction --no-progress ${{ matrix.composer-flags }}
            composer info -D

      - name: Run tests
        env:
          PHP_CS_FIXER_IGNORE_ENV: 1
        run: vendor/bin/phpunit ${{ matrix.phpunit-flags }}

      - name: Run static analysis
        run: vendor/bin/psalm.phar
        if: matrix.static-analysis != 'none'

      - name: Run style fixer
        env:
          PHP_CS_FIXER_IGNORE_ENV: 1
        run: vendor/bin/php-cs-fixer --diff --dry-run -v fix
        if: runner.os != 'Windows' && matrix.style-fix != 'none'

      - name: Install composer-require-checker
        run: php -r 'file_put_contents("composer-require-checker.phar", file_get_contents("https://github.com/maglnet/ComposerRequireChecker/releases/download/3.7.0/composer-require-checker.phar"));'
        if: runner.os != 'Windows' && matrix.composer-require-checker-version != 'none'

      - name: Run composer-require-checker
        run: php composer-require-checker.phar check composer.json --config-file $PWD/composer-require-check.json
        if: runner.os != 'Windows' && matrix.composer-require-checker-version != 'none'
